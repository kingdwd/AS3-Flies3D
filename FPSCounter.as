package {	import flash.ui.Keyboard;	import flash.events.*;	import flash.display.*;	import flash.utils.*;	import flash.text.*;		public class FPSCounter extends TextField {		private var comboString:String	= 'fps';		private var comboIndex:int		= 0;				private var lastTime:int		= 0;		private var nowTime:int			= 0;		private var fps:int				= 0;				private var avgCount			= 100;		private var diffs:Array;		private var diffIndex:Number	= 0;		private var diffNow:Number		= 0;		private var diffTotal			= 0;				public function FPSCounter(t_comboString:String = null) {				// constructor			if(t_comboString) comboString = t_comboString;			defaultTextFormat = new TextFormat('_sans', 15);			autoSize = TextFieldAutoSize.LEFT;			selectable = false;						diffs = new Array(avgCount);			for(var i:int = 0; i<avgCount; i++) diffs[i] = 0;						addEventListener(Event.ADDED_TO_STAGE, addedToStage);		}								private function addedToStage(e:Event) {			stage.addEventListener(Event.RESIZE, onResize);			//stage.addEventListener(KeyboardEvent.KEY_DOWN, keyDownHandler);						setDisplay(true);			update();			onResize();			trace('FPSCounter::addedToStage');		}						private function keyDownHandler(evt:KeyboardEvent):void {			if(evt.charCode == comboString.charCodeAt(comboIndex)) {				comboIndex++;				if(comboIndex == comboString.length) {					comboIndex = 0;					setDisplay(!visible);		// toggle display				}			} else {				comboIndex = 0;			}		}				private function setDisplay(b:Boolean):void {			trace('FPSCounter::setDisplay', b);			visible = b;		// will use this as the flag to see if its on or not			if(b) {				addEventListener(Event.ENTER_FRAME, update);			} else {				removeEventListener(Event.ENTER_FRAME, update);			}		}		function update(e:Event = null):void {			//nowTime = getTimer();			//fps = int(1000.0/(nowTime - lastTime));			//text = String(fps) + ' fps';			//lastTime = nowTime;						nowTime = getTimer();			diffNow = nowTime - lastTime;			diffTotal -= diffs[diffIndex];			diffs[diffIndex] = diffNow;			diffIndex = (diffIndex+1) % avgCount;			diffTotal += diffNow;			text = String(int(1000 * avgCount / diffTotal));			lastTime = nowTime;					}						private function onResize(e:Event = null) {			x = (stage.stageWidth - width) - 10;			y = 10;		}			}}